/*!
 * operation-tree-node v1.0.0
 * (c) 2019-2019 yujinpan
 * Released under the MIT License.
 */
"use strict";function r(r,t,e){return t in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r}function t(r,t){var e=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),e.push.apply(e,n)}return e}function e(r){return function(r){if(Array.isArray(r)){for(var t=0,e=new Array(r.length);t<r.length;t++)e[t]=r[t];return e}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var n={children:"children",parent:"parent"};function o(r){return!(!Array.isArray(r)||!r.length)}module.exports=function(i,c){var u,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n,f=a.children;return function(r,t){var e,i=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:n).children;return function r(n,c){return n.map((function(n,u,a){var f=t(n,u,a,c);return o(e=f[i])&&(f[i]=r(e,f)),f}))}(r)}(i=e(i).sort(c),(function(n){return u=n[f],n=function(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(o,!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(o).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}({},n),o(u)&&(n[f]=e(n[f]).sort(c)),n}),a)};