/*!
 * operation-tree-node v1.0.1
 * (c) 2019-2019 yujinpan
 * Released under the MIT License.
 */
"use strict";function r(r){return!(!Array.isArray(r)||!r.length)}function e(e,n){var t,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{children:"children"};!function e(o,i){o.forEach((function(o,u,a){t=o[c.children],!1!==n(o,u,a,i)&&r(t)&&e(t,o)}))}(e,null)}function n(r,e){var n,t=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{parent:"parent"}).parent;r.forEach((function(r){!function r(c){n=c[t];n&&!1!==e(n)&&r(n)}(r)}))}function t(e,n){var t,c=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{children:"children"}).children;return function e(o,i){return o.map((function(o,u,a){var f=n(o,u,a,i);return r(t=f[c])&&(f[c]=e(t,f)),f}))}(e)}function c(r,e,n){return e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function o(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.push.apply(n,t)}return n}function i(r){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(n,!0).forEach((function(e){c(r,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):o(n).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(n,e))}))}return r}function u(r){return function(r){if(Array.isArray(r)){for(var e=0,n=new Array(r.length);e<r.length;e++)n[e]=r[e];return n}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(exports,"__esModule",{value:!0}),exports.treeCheck=function(c,o){var u,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{id:"id",children:"children",parent:"parent"},f=a.children,l=a.id,h=[],d=[],p=function(r){d.push(r[l]),r._checked=!0};return e(t(c,(function(r,e,n,t){return i({},r,{_checked:!1,parent:t})}),a),(function(n){if(n._checked)return!1;o.includes(n[l])&&(p(n),h.push(n),r(u=n[f])&&e(u,(function(r){p(r)}),a))}),a),n(h,(function(r){if(r._checked)return!1;var e=r[f].length;if(1===e)p(r);else{var n=r._checkedCount||0;r._checkedCount=n+1,r._checkedCount===e&&p(r)}}),a),d},exports.treeEach=e,exports.treeEachParent=n,exports.treeFilter=function(e,n){var t,c=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{children:"children"}).children;return function e(o,u){var a,f,l,h=[];return o.forEach((function(o,d,p){l=!1,a=i({},o),r(t=o[c])&&(f=e(t,a),(l=r(f))?a[c]=f:delete a[c]),(n(o,d,p,u)||l)&&h.push(a)})),h}(e)},exports.treeMap=t,exports.treeMerge=function(e,n){var t,c,o,a=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{children:"children"}).children;return function e(f){var l=[];return f.forEach((function(f){var h=l.find((function(r){return n(r,f)}));t=f[a],h?(c=h[a],r(t)&&(r(c)?h[a]=e([].concat(u(c),u(t))):h[a]=e(t))):(o=i({},f),r(t)&&(o[a]=u(t)),l.push(o))})),l}(e)},exports.treeSort=function(e,n){var c,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{children:"children"},a=o.children;return t(e=u(e).sort(n),(function(e){return c=e[a],e=i({},e),r(c)&&(e[a]=u(e[a]).sort(n)),e}),o)},exports.treeToFlatArray=function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(r){return r},t=arguments.length>2?arguments[2]:void 0,c=[];return e(r,(function(){c.push(n.apply(void 0,arguments))}),t),c};