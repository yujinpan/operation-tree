/*!
 * operation-tree-node v1.0.0
 * (c) 2019-2019 yujinpan
 * Released under the MIT License.
 */
"use strict";function r(r){return!(!Array.isArray(r)||!r.length)}Object.defineProperty(exports,"__esModule",{value:!0});var e={children:"children",parent:"parent"};function t(t,n){var o,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;!function e(t,c){t.forEach((function(t,u,a){o=t[i.children],n(t,u,a,c),r(o)&&e(o,t)}))}(t,null)}function n(t,n){var o,i=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:e).children;return function e(t,c){return t.map((function(t,u,a){var f=n(t,u,a,c);return r(o=f[i])&&(f[i]=e(o,f)),f}))}(t)}function o(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function i(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function c(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(t,!0).forEach((function(e){o(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):i(t).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}function u(r){return function(r){if(Array.isArray(r)){for(var e=0,t=new Array(r.length);e<r.length;e++)t[e]=r[e];return t}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}exports.treeEach=t,exports.treeFilter=function(t,n){var o,i=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:e).children;return function e(t,u){var a,f,l,p=[];return t.forEach((function(t,s,h){l=!1,a=c({},t),r(o=t[i])&&(f=e(o,a),(l=r(f))?a[i]=f:delete a[i]),(n(t,s,h,u)||l)&&p.push(a)})),p}(t)},exports.treeMap=n,exports.treeMerge=function(t,n){var o,i,a,f=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:e).children;return function e(t){var l=[];return t.forEach((function(t){var p=l.find((function(r){return n(r,t)}));o=t[f],p?(i=p[f],r(o)&&(r(i)?p[f]=e([].concat(u(i),u(o))):p[f]=e(o))):(a=c({},t),r(o)&&(a[f]=u(o)),l.push(a))})),l}(t)},exports.treeSort=function(t,o){var i,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,f=a.children;return n(t=u(t).sort(o),(function(e){return i=e[f],e=c({},e),r(i)&&(e[f]=u(e[f]).sort(o)),e}),a)},exports.treeToFlatArray=function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(r){return r},o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,i=[];return t(r,(function(){i.push(n.apply(void 0,arguments))}),o),i};